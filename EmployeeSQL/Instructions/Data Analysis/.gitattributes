-- Create tables in following order: 
-- Titles
-- Employees
-- Departments
-- Dept_Manager
-- Dept_Employees
-- Salaries

CREATE TABLE titles
(
	title_id VARCHAR PRIMARY KEY,
	title VARCHAR
);
	
SELECT * FROM titles;

CREATE TABLE employees
(
	emp_no INT PRIMARY KEY,
	emp_title_id VARCHAR,
	birth_dt DATE,
	first_name VARCHAR,
	last_name VARCHAR,
	sex VARCHAR,
	hire_dt DATE,
	FOREIGN KEY (emp_title_id) REFERENCES titles(title_id)
);

SELECT * FROM employees;

CREATE TABLE departments
(	
	dept_no VARCHAR PRIMARY KEY,
 	dept_name VARCHAR
);

SELECT * FROM departments;

-- need foreign keys for dept_mgr info and set primary key
-- due to columns already exist in other tables
CREATE TABLE dept_manager
(
	dept_no VARCHAR,
	emp_no INT,
	FOREIGN KEY (dept_no)REFERENCES departments(dept_no),
	FOREIGN KEY (emp_no) REFERENCES employees(emp_no),
	PRIMARY KEY(dept_no, emp_no)
);

SELECT * FROM dept_manager;

-- need foreign keys for dept_emp info and set primary key
-- due to columns already exist in other tables
CREATE TABLE dept_employees
(
	emp_no INT,
	dept_no VARCHAR,
	FOREIGN KEY (emp_no) REFERENCES employees(emp_no),
	FOREIGN KEY (dept_no) REFERENCES departments(dept_no),
	PRIMARY KEY(emp_no, dept_no)
);
SELECT * FROM dept_employees;

CREATE TABLE salaries
(
	emp_no INT PRIMARY KEY,
	salary INT, 
	FOREIGN KEY (emp_no) REFERENCES employees(emp_no)
);

SELECT * FROM salaries;

--List the following details of each employee: employee number, last name, first name, sex, and salary.
SELECT employees.emp_no, first_name, last_name, sex, salary
FROM employees
INNER JOIN salaries
ON employees.emp_no = salaries.emp_no;

--List first name, last name, and hire date for employees who were hired in 1986.
--need to use BETWEEN command since the hire_data is DATE dt.
--SELECT * FROM employees;
SELECT first_name, last_name, hire_dt
FROM employees
WHERE hire_dt BETWEEN '1986-01-01' AND '1986-12-31';

--List the manager of each department with the following information: department number, department name, the manager's employee number, last name, first name.
--SELECT * FROM employees;
----SELECT * FROM dept_manager;
--SELECT * FROM departments;
SELECT dept_manager.dept_no, dept_name, dept_manager.emp_no, first_name, last_name
FROM employees
INNER JOIN dept_manager
ON employees.emp_no = dept_manager.emp_no
INNER JOIN departments
ON departments.dept_no = dept_manager.dept_no;



--List the department of each employee with the following information: employee number, last name, first name, and department name.
--SELECT * FROM employees;
--SELECT * FROM dept_employees;
--SELECT * FROM departments;
SELECT employees.emp_no, first_name, last_name, dept_name
FROM employees
INNER JOIN dept_employees
ON employees.emp_no = dept_employees.emp_no
INNER JOIN departments
ON departments.dept_no = dept_employees.dept_no;

--List first name, last name, and sex for employees whose first name is "Hercules" and last names begin with "B."
--SELECT * FROM employees;
--% is the wild card character
--underscore ignores character position to look for other characters: ex '__a%''
SELECT first_name, last_name, sex
FROM employees 
WHERE first_name = 'Hercules'
AND last_name LIKE 'B%';

--List all employees in the Sales department, including their employee number, last name, first name, and department name.
SELECT employees.emp_no, first_name, last_name, dept_name
FROM employees
INNER JOIN dept_employees
ON employees.emp_no = dept_employees.emp_no
INNER JOIN departments
ON departments.dept_no = dept_employees.dept_no
WHERE departments.dept_name IN ('Sales');

--List all employees in the Sales and Development departments, including their employee number, last name, first name, and department name.
--SELECT * FROM employees;
SELECT * FROM dept_employees;
--SELECT * FROM departments;
SELECT employees.emp_no, first_name, last_name, dept_name
FROM employees
INNER JOIN dept_employees
ON employees.emp_no = dept_employees.emp_no
INNER JOIN departments
ON departments.dept_no = dept_employees.dept_no
WHERE departments.dept_name IN('Sales','Development');

--In descending order, list the frequencycount of employee last names, i.e., how many employees share each last name.
--use groupby to count and order by list in order

--SELECT * FROM employees;
SELECT last_name, COUNT(last_name) AS "Last Name Count"
FROM employees
GROUP BY last_name
ORDER BY "Last Name Count" DESC;

SELECT employees.emp_no, first_name, last_name, dept_name, title
FROM employees
WHERE emp_no IN ('499942')
